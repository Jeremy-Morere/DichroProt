#!/bin/bash

# Prepare all working directories for a trajectory scan.

input=$1

# Read input
trajectory=`grep 'trajectory' $input | awk '{print $3}'`
prmtop_file=`grep 'PRMTOP' $input | awk '{print $3}'`
pdb_file=${prmtop_file%".prmtop"}
lot=`grep 'Level of theory' $input | awk '{print $5}'`
NStates=`grep 'Number of state' $input | awk '{print $5}'`
full=`grep 'Full contribution' $input | awk '{print $4}'`
pertur=`grep 'Perturbation' $input | awk '{print $3}'`
matrix=`grep 'Matrix' $input | awk '{print $3}'`
superp=`grep 'Superposition' $input | awk '{print $3}'`
lower=`grep 'lower limit' $input | awk '{print $4}'`
upper=`grep 'upper limit' $input | awk '{print $4}'`
resolution=`grep 'resolution' $input | awk '{print $3}'`
fwhm=`grep 'fwhm' $input | awk '{print $3}'`
step=`grep 'sampling interval' $input | awk '{print $4}'`
path_amber='amber/16'
path_gaussian='gaussian/09/pgi'


# STEP 1:  Create conformation
mkdir conformation
cd conformation

echo "parm ../$prmtop_file
trajin ../$trajectory 1 last $step

trajout $pdb_file pdb multi
" > trajin_pdb

module load $path_amber
cpptraj < trajin_pdb

N_frame=`ls | wc -l`
N_frame=$((N_frame-1))

#In case some error appear in the creation of the .pdb file
#We erase the corrupted frame and renumber every other one
for (( i=1; i<=$N_frame; i++ )); do
 test_X=`head -n2 $pdb_file.$i | tail -n1 | awk '{print $6}'`
 test_Y=`head -n2 $pdb_file.$i | tail -n1 | awk '{print $7}'`
 test_Z=`head -n2 $pdb_file.$i | tail -n1 | awk '{print $8}'`

 if [ "$test_X" = "0.000" ]; then
  if [ "$test_Y" = "0.000" ]; then
   if [ "$test_Z" = "0.000" ]; then
echo "elimine frame $i"
    for (( j=$(( $i + 1 )); j<=$N_frame; j++ )); do
     mv $pdb_file.$j $pdb_file.$(( $j - 1 ))
    done
    i=$(( $i - 1))
    N_frame=$(( $N_frame - 1))
   fi
  fi
 fi
done

cd ..


for (( i=1; i<=$N_frame; i++ )); do

  mkdir frame_$i

  mv conformation/$pdb_file.$i frame_$i/$pdb_file.$i.pdb

  cp $prmtop_file frame_$i

  cd frame_$i

# STEP 2: Create Input file
echo "#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#
# Input for DichroProt coupling #
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%#


##Parameter for Amber and gaussian
PDB :           $pdb_file.$i.pdb
PRMTOP :        $prmtop_file
trajectory :    protein.nc
Number of frame : $N_frame 

Level of theory : $lot
Number of state : $NStates

Full contribution : $full

##Parameter for coupling
#Type of coupling (chose one)
Perturbation :     $pertur
Matrix :           $matrix
Superposition :    $superp

#Specify the spectral window (nm)
lower limit :    $lower
upper limit :    $upper

##Parameter for convolution (Don't touch)
#Resolution (nm)
resolution :     $resolution

#Full width at half maximum (eV)
fwhm :    $fwhm

" > QmmmInput

  prep_qmmm QmmmInput

  cd ..

done

#Add the number of frame into the Input
if grep -q -F "Number of frame :" $input; then
  sed -i '/Number of frame/d' $input
  echo "Number of frame : $N_frame" >> $input 
else
  echo "Number of frame : $N_frame" >> $input
fi

rm -rf conformation

# Step 3: Create gaussian template 
echo "# $lot TD=(NStates=$NStates,root=@) density" > gau_job.tpl


# STEP 4: Create submition file
echo "#!/bin/bash
#SBATCH -N 1
#SBATCH -p std
#SBATCH -J CD-amber
#SBARCH -n 16
#SBATCH -t 16-00:00:00

module purge
module load $path_amber
module load $path_gaussian

sander -O -i mdgau-min -o test.out -c protein.rst -p $prmtop_file -r test.rst -x test.rst
" > submit.sh

